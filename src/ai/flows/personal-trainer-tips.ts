'use server';

/**
 * @fileOverview Provides personalized workout recommendations and motivational messages generated by AI.
 *
 * - getPersonalTrainerTips - A function that returns personalized workout recommendations and motivational messages.
 * - PersonalTrainerTipsInput - The input type for the getPersonalTrainerTips function.
 * - PersonalTrainerTipsOutput - The return type for the getPersonalTrainerTips function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const PersonalTrainerTipsInputSchema = z.object({
  fitnessGoal: z.string().describe('The fitness goal of the user, e.g., lose weight, build muscle, improve endurance.'),
  workoutHistory: z.string().describe('The recent workout history of the user, e.g., ran 5km, cycled 20km, weight training.'),
  fitnessLevel: z.string().describe('The fitness level of the user, e.g., beginner, intermediate, advanced.'),
});
export type PersonalTrainerTipsInput = z.infer<typeof PersonalTrainerTipsInputSchema>;

const PersonalTrainerTipsOutputSchema = z.object({
  recommendation: z.string().describe('A personalized workout recommendation.'),
  motivation: z.string().describe('A motivational message to encourage the user.'),
});
export type PersonalTrainerTipsOutput = z.infer<typeof PersonalTrainerTipsOutputSchema>;

export async function getPersonalTrainerTips(input: PersonalTrainerTipsInput): Promise<PersonalTrainerTipsOutput> {
  return personalTrainerTipsFlow(input);
}

const prompt = ai.definePrompt({
  name: 'personalTrainerTipsPrompt',
  input: {schema: PersonalTrainerTipsInputSchema},
  output: {schema: PersonalTrainerTipsOutputSchema},
  prompt: `You are a personal trainer, and you will provide personalized workout recommendations and motivational messages to the user.

  Fitness Goal: {{{fitnessGoal}}}
  Workout History: {{{workoutHistory}}}
  Fitness Level: {{{fitnessLevel}}}

  Recommendation:
  Motivation: `,
});

const personalTrainerTipsFlow = ai.defineFlow(
  {
    name: 'personalTrainerTipsFlow',
    inputSchema: PersonalTrainerTipsInputSchema,
    outputSchema: PersonalTrainerTipsOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
